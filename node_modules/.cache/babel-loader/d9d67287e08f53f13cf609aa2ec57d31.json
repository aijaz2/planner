{"ast":null,"code":"var _jsxFileName = \"/Users/ako21/Desktop/planner/src/components/Task/Todo.js\";\nimport React from \"react\";\n\nfunction TodoForm({\n  addTodo\n}) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction Todo({\n  todo,\n  index,\n  completeTodo,\n  removeTodo\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    style: {\n      textDecoration: todo.isCompleted ? \"line-through\" : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, todo.text, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => completeTodo(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Complete\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeTodo(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"x\")));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/Users/ako21/Desktop/planner/src/components/Task/Todo.js"],"names":["React","TodoForm","addTodo","value","setValue","useState","handleSubmit","e","preventDefault","target","Todo","todo","index","completeTodo","removeTodo","textDecoration","isCompleted","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA+B;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACL,KAAL,EAAY;AACZD,IAAAA,OAAO,CAACC,KAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GALD;;AAOA,sBACI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,OAFd;AAGI,IAAA,KAAK,EAAEH,KAHX;AAII,IAAA,QAAQ,EAAEI,CAAC,IAAIH,QAAQ,CAACG,CAAC,CAACE,MAAF,CAASN,KAAV,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH;;AACD,SAASO,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA;AAA7B,CAAd,EAAyD;AAErD,sBACI;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAEJ,IAAI,CAACK,WAAL,GAAmB,cAAnB,GAAoC;AAAtD,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKL,IAAI,CAACM,IAJV,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,OAAO,EAAE,MAAMJ,YAAY,CAACD,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,IAAA,OAAO,EAAE,MAAME,UAAU,CAACF,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CANJ,CADJ;AAaH;;AACD,eAAeF,IAAf","sourcesContent":["import React from \"react\";\n\nfunction TodoForm({ addTodo }) {\n    const [value, setValue] = useState(\"\");\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!value) return;\n        addTodo(value);\n        setValue(\"\");\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                onChange={e => setValue(e.target.value)}\n            />\n        </form>\n    );\n}\nfunction Todo({ todo, index, completeTodo, removeTodo }) {\n\n    return (\n        <div\n            className=\"todo\"\n            style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n        >\n            {todo.text}\n\n            <div>\n                <button onClick={() => completeTodo(index)}>Complete</button>\n                <button onClick={() => removeTodo(index)}>x</button>\n            </div>\n        </div>\n    );\n}\nexport default Todo;"]},"metadata":{},"sourceType":"module"}